table(temp)
length(temp)
length(unique(temp))
?over
temp <- over(calCoast, counties))
temp <- over(calCoast, counties)
head(temp)
counties$NAME[3]
table(temp$NAME)
sort(table(temp$NAME))
sum(sort(table(temp$NAME)))
nrow(calCoast)
head(over(calCoast, counties)$NAME)
# add county#
calCoast$county <- over(calCoast, counties)$NAME#
calCoast$county <- factor(calCoast$county, levels = rev(coastCounties))
plot(coastalCounties);nrow(subset(calCoast, is.na(county)))
points(subset(calCoast, is.na(county)), col='red',pch=16, cex=0.5)
table(calCoast$county, calCoast$year)
apply(table(calCoast$county, calCoast$year)),1, min)
apply(data.frame(table(calCoast$county, calCoast$year))),1, min)
apply(table(calCoast$county, calCoast$year),1, min)
sort(apply(table(calCoast$county, calCoast$year),1, min))
apply(table(calCoast$county, calCoast$year),1, min)
temp <- apply(table(calCoast$county, calCoast$year),1, min)
names(temp)[temp >= 100]
plot(coastalCounties[is.element(coastalCounties$NAME, focalCounties)], col='red')
plot(coastalCounties[is.element(coastalCounties$NAME, focalCounties),], col='red')
plot(coastalCounties[is.element(coastalCounties$NAME, focalCounties),], col='red', border=NA)
plot(coastalCounties)
plot(coastalCounties[is.element(coastalCounties$NAME, focalCounties),], col='red', border=NA)
plot(coastalCounties)
plot(coastalCounties[is.element(coastalCounties$NAME, focalCounties),], col='red', border=NA, add=T)
plot(coastalCounties[is.element(coastalCounties$NAME, focalCounties),], col='red', border=NA)
plot(coastalCounties, add=T)
nrow(calCoast)
nrow(subset(calCoast, !is.na(species_id)))/nrow(calCoast)
calCoast <- subset(calCoast, !is.na(species_id))
table(calCoast$rank)
minDiv <- length(unique(calCoast$name[calCoast$year == 2016]))
minDiv
sampleSize <- table(calCoast$county, calCoast$year)
samlpeSize
sampleSize
unassigned <- subset(calCoast, is.na(county))
utmStr <- "+proj=utm +zone=%d +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0"#
crsUTM32 <- CRS(sprintf(utmStr, 32))#
countiesUTM <- spTransform(coastalCounties, crsUTM32)
nrow(unassigned)
head(unassigned)
length(unique(calCoast$id))
nrow(calCoast)
unassigned$id[1]
unassigned$id[91]
i <- 1
ptsUTM <- spTransform(unassigned[i,], crsUTM32)
pUTM$NAME[which.min(gDistance(ptsUTM[i,], pUTM, byid=TRUE))]
countiesUTM$NAME[which.min(gDistance(ptsUTM[i,], countiesUTM, byid=TRUE))]
? gDistance
require(rgeos)
? gDistance
countiesUTM$NAME[which.min(gDistance(ptsUTM[i,], countiesUTM, byid=TRUE))]
## For each point, find name of nearest polygon (in this case, Belgian cantons)#
for (i in 1:nrow(unassigned)) {#
	ptsUTM <- spTransform(unassigned[i,], crsUTM32)#
    calCoast$county[calCoast$id == unassgned$id[i]] <- countiesUTM$NAME[which.min(gDistance(ptsUTM[i,], countiesUTM, byid=TRUE))]#
}
unassigned <- subset(calCoast, is.na(county))#
## For each point, find name of nearest polygon (in this case, Belgian cantons)#
for (i in 1:nrow(unassigned)) {#
	ptsUTM <- spTransform(unassigned[i,], crsUTM32)#
    calCoast$county[calCoast$id == unassigned$id[i]] <- countiesUTM$NAME[which.min(gDistance(ptsUTM[i,], countiesUTM, byid=TRUE))]#
}
load("data files/calCoastObs.RData")#
# transform coordinates to spatial objects#
coordinates(calCoast) <- ~ lng + lat#
proj4string(calCoast) <- CRS("+proj=longlat")#
calCoast <- spTransform(calCoast, crswgs84)#
#
# Add Valentine's (1966) bioprovinces#
provinces <- data.frame(t(data.frame(#
	#oregonian.columbian = c(48, 55),#
	oregonian.mendocinian = c(37, 48),#
	oregonian.montereyan = c(34.45, 37), # first point is Point Conception#
	californian = c(27.8, 34.45)#
))); colnames(provinces) <- c('southern','northern')#
#
calCoast$province <- NA#
for(i in 1:nrow(provinces)) {#
	calCoast$province[calCoast$lat >= provinces$southern[i] & calCoast$lat < provinces$northern[i]] <- rownames(provinces)[i]#
}#
calCoast$province <- factor(calCoast$province, levels=rev(rownames(provinces)))#
#
# add county#
calCoast$county <- over(calCoast, counties)$NAME#
calCoast$county <- factor(calCoast$county, levels = rev(coastCounties))#
#
# assign nearest county to observations outside of official county boundaries#
##  First project data into a planar coordinate system (here UTM zone 32)#
utmStr <- "+proj=utm +zone=%d +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0"#
crsUTM32 <- CRS(sprintf(utmStr, 32))#
countiesUTM <- spTransform(coastalCounties, crsUTM32)#
#
unassigned <- subset(calCoast, is.na(county))#
## For each point, find name of nearest polygon (in this case, Belgian cantons)#
for (i in 1:nrow(unassigned)) {#
	ptsUTM <- spTransform(unassigned[i,], crsUTM32)#
    calCoast$county[calCoast$id == unassigned$id[i]] <- countiesUTM$NAME[which.min(gDistance(ptsUTM[i,], countiesUTM, byid=TRUE))]#
}
i
nrow(unassigned)
ptsUTM
head(unassigned)
for (i in 1:nrow(unassigned)) {#
	ptsUTM <- spTransform(unassigned$coordinates[i], crsUTM32)#
    calCoast$county[calCoast$id == unassigned$id[i]] <- countiesUTM$NAME[which.min(gDistance(ptsUTM[i,], countiesUTM, byid=TRUE))]#
}
i
unassigned$coordinates
i
calCoast$county[calCoast$id == unassigned$id[i]]
ountiesUTM$NAME[which.min(gDistance(ptsUTM[i,], countiesUTM, byid=TRUE))]
countiesUTM$NAME[which.min(gDistance(ptsUTM[i,], countiesUTM, byid=TRUE))]
i <- 2
countiesUTM$NAME[which.min(gDistance(ptsUTM[i,], countiesUTM, byid=TRUE))]
head(unassigned)
plot(countiesUTM)
plot(countiesUTM)
points(unassigned, col='red',pch=16, cex=0.5)
unassigned <- subset(calCoast, is.na(county))#
spTransform(unassigned, crsUTM32)#
## For each point, find name of nearest polygon (in this case, Belgian cantons)#
for (i in 1:nrow(unassigned)) {#
    calCoast$county[calCoast$id == unassigned$id[i]] <- countiesUTM$NAME[which.min(gDistance(unassigned[i,], countiesUTM, byid=TRUE))]#
}
warnings()
plot(countiesUTM)
points(unassigned, col='red',pch=16, cex=0.5)
unassigned <- subset(calCoast, is.na(county))#
unassignedUTM <- spTransform(unassigned, crsUTM32)#
## For each point, find name of nearest polygon (in this case, Belgian cantons)#
for (i in 1:nrow(unassigned)) {#
    calCoast$county[calCoast$id == unassigned$id[i]] <- countiesUTM$NAME[which.min(gDistance(unassignedUTM[i,], countiesUTM, byid=TRUE))]#
}
plot(countiesUTM)
points(unassignedUTM, col='red',pch=16, cex=0.5)
points(unassignedUTM, col='red',pch=16, cex=0.5)
unassignedUTM <- spTransform(unassigned, crsUTM32)
head(unassigned)
head(calCoast)
remove(unassigned)
unassigned <- subset(calCoast, is.na(county))
head(unassigned)
plot(coastalCounties)
points(calCoast)
unassigned <- subset(calCoast, is.na(county))#
unassignedUTM <- spTransform(unassigned, crsUTM32)
# set root base for proper file direction#
init.dir <- getwd()#
if(is.element(Sys.info()["nodename"], c("es-naheim.local","sr12-cf96e71ca1.stanford.edu"))) {#
	my.root <- "/Volumes/Blastoid/noelheim_data"#
} else {#
	my.root <- "/Users/noelheim"#
}#
Sys.setenv(TZ="America/Los_Angeles")#
#
source(paste(my.root,"/Box Sync/Includes/myFunctions.r", sep=""));#
setwd(paste(my.root,"/Box Sync/git/snapshotcalcoast", sep=""));#
#
library(vegan)#
library(maps)#
require(rgdal)#
require(rgeos)#
#
# mapping info #
crswgs84 <- CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs") # map projection#
bayCounties <- c('Sonoma','Marin','Napa','Contra Costa','Solano','San Francisco','Alameda','San Mateo','Santa Clara')#
coastCounties <- c('Del Norte','Humboldt','Mendocino',bayCounties,'Santa Cruz','Monterey','San Luis Obispo','Santa Barbara','Ventura','Los Angeles','Orange','San Diego')#
focalCounties <- c("San Diego","Orange","Los Angeles","Monterey","Santa Cruz","San Mateo","Marin","Sonoma","Humboldt")#
## load maps#
cal <- readOGR(dsn = "data files/cb_2017_us_state_500k/", layer = "cb_2017_us_state_500k")#
cal <- cal[cal$NAME == 'California',]#
cal <- spTransform(cal, crswgs84)#
#
counties <- readOGR(dsn = "data files/CA_Counties/", layer = "CA_Counties_TIGER2016")#
counties <- spTransform(counties, crswgs84)#
#
mpas <- readOGR(dsn = "data files/CA_MPA/", layer = "California_Marine_Protected_Areas_[ds582]")#
mpas <- spTransform(mpas, crswgs84)#
#
# extract meaningful groups of counties#
bayArea <- counties[is.element(counties$NAME, bayCounties),]#
coastalCounties <- counties[is.element(counties$NAME, coastCounties),]#
#
# load in observation#
load("data files/calCoastObs.RData")#
# transform coordinates to spatial objects#
coordinates(calCoast) <- ~ lng + lat#
proj4string(calCoast) <- CRS("+proj=longlat")#
calCoast <- spTransform(calCoast, crswgs84)#
#
# Add Valentine's (1966) bioprovinces#
provinces <- data.frame(t(data.frame(#
	#oregonian.columbian = c(48, 55),#
	oregonian.mendocinian = c(37, 48),#
	oregonian.montereyan = c(34.45, 37), # first point is Point Conception#
	californian = c(27.8, 34.45)#
))); colnames(provinces) <- c('southern','northern')#
#
calCoast$province <- NA#
for(i in 1:nrow(provinces)) {#
	calCoast$province[calCoast$lat >= provinces$southern[i] & calCoast$lat < provinces$northern[i]] <- rownames(provinces)[i]#
}#
calCoast$province <- factor(calCoast$province, levels=rev(rownames(provinces)))#
#
# add county#
calCoast$county <- over(calCoast, counties)$NAME#
calCoast$county <- factor(calCoast$county, levels = rev(coastCounties))#
#
# assign nearest county to observations outside of official county boundaries#
##  First project data into a planar coordinate system (here UTM zone 32)#
utmStr <- "+proj=utm +zone=%d +datum=NAD83 +units=m +no_defs +ellps=GRS80 +towgs84=0,0,0"#
crsUTM32 <- CRS(sprintf(utmStr, 32))#
countiesUTM <- spTransform(coastalCounties, crsUTM32)#
#
unassigned <- subset(calCoast, is.na(county))#
unassignedUTM <- spTransform(unassigned, crsUTM32)
head(unassignedUTM)
plot(coastalCounties)
plot(coastalCountiesUTM)
plot(countiesUTM)
points(unassignedUTM, col='red',pch=16, cex=0.5)
i <- 1
countiesUTM$NAME[which.min(gDistance(unassignedUTM[i,], countiesUTM, byid=TRUE))]
i <- 2
countiesUTM$NAME[which.min(gDistance(unassignedUTM[i,], countiesUTM, byid=TRUE))]
i <- 33
countiesUTM$NAME[which.min(gDistance(unassignedUTM[i,], countiesUTM, byid=TRUE))]
for (i in 1:nrow(unassigned)) {#
    calCoast$county[calCoast$id == unassigned$id[i]] <- countiesUTM$NAME[which.min(gDistance(unassignedUTM[i,], countiesUTM, byid=TRUE))]#
}
subset(calCoast, is.na(county))
subset(calCoast, county=="")
table(calCoast$county)
# subset to species#
calCoast <- subset(calCoast, !is.na(species_id))#
minDiv <- length(unique(calCoast$name[calCoast$year == 2016]))#
sampleMatrix <- table(calCoast$year, calCoast$taxon_id)#
#
sampleSize <- table(calCoast$county, calCoast$year)
sampleSize
sampleSize
sampleMatrix <- subset(sampleMatrix, apply(sampleMatrix,2,min) >= 100)
sampleMatrix
sampleMatrix <- subset(sampleMatrix, apply(sampleMatrix,1,min) >= 100)
sampleMatrix <- table(calCoast$year, calCoast$taxon_id)#
sampleMatrix <- subset(sampleMatrix, apply(sampleMatrix,1,min) >= 100)
sampleMatrix
sampleMatrix <- table(calCoast$year, calCoast$taxon_id)
sampleMatrix
sampleSize <- table(calCoast$county, calCoast$year)#
sampleSize <- subset(sampleSize, apply(sampleSize,1,min) >= 100)
sampleSize
apply(sampleSize,1,min)
sampleSize <- table(calCoast$county, calCoast$year)
apply(sampleSize,1,min)
apply(sampleSize,1,min) >= 100
sampleSize <- table(calCoast$county, calCoast$year)#
sampleSize <- sampleSize[apply(sampleSize,1,min) >= 100,]
sampleSize
class(sampleSize)
sampleSize <- table(calCoast$county, calCoast$year)#
sampleSize <- data.frame(sampleSize[apply(sampleSize,1,min) >= 100,])
sampleSize
sampleSize <- table(calCoast$county, calCoast$year)#
sampleSize <- as.data.frame(sampleSize[apply(sampleSize,1,min) >= 100,])
sampleSize
dimnames(sampleSize)
sampleSize <- table(calCoast$county, calCoast$year)#
sampleSize <- sampleSize[apply(sampleSize,1,min) >= 100,]
dimnames(sampleSize)
rarefiedDiversity <- data.frame(matrix(NA, nrow=nrow(sampleSize), ncol=ncol(sampleSize), dimnames=dimnames(sampleSize)))
rarefiedDiversity
i
i <- 1
sampleMatrix <- table(calCoast$year[calCoast$county==rownames(sampleSize)[i]], calCoast$species_id[calCoast$county==rownames(sampleSize)[i]])
sampleMatrix <- table(calCoast$year[calCoast$county==rownames(sampleSize)[i]], calCoast$species_id[calCoast$county==rownames(sampleSize)[i]])#
	rarefied <- rarecurve(sampleMatrix, 1)
rarefied
sampleMatrix <- table(calCoast$year[calCoast$county==rownames(sampleSize)[i]], calCoast$species_id[calCoast$county==rownames(sampleSize)[i]])#
	rarefied <- rarecurve(sampleMatrix, 1)
sampleSize[i,]
min(sampleSize[i,])
minSampleSize
min(sampleSize)
?rarecurv
?rarecurve
minSample <- min(sampleSize[i,])#
	sampleMatrix <- table(calCoast$year[calCoast$county==rownames(sampleSize)[i]], calCoast$species_id[calCoast$county==rownames(sampleSize)[i]])#
	rarefied <- rarefy(sampleMatrix, minSample)
rarefied
rarefied[[1]]
rarefied[1]
as.numeric(rarefied)
rarefiedDiversity <- data.frame(matrix(NA, nrow=nrow(sampleSize), ncol=ncol(sampleSize), dimnames=dimnames(sampleSize)))#
rarefiedDiversityEqSamp <- rarefiedDiversity#
for(i in 1:nrow(sampleSize)) {#
	minSample <- min(sampleSize[i,])#
	sampleMatrix <- table(calCoast$year[calCoast$county==rownames(sampleSize)[i]], calCoast$species_id[calCoast$county==rownames(sampleSize)[i]])#
	rarefied <- rarefy(sampleMatrix, minSample)	#
	rarefiedDiversity[i,] <- as.numeric(rarefied)#
	rarefied <- rarefy(sampleMatrix, min(sampleSize))#
	rarefiedDiversityEqSamp[i,] <- as.numeric(rarefied)#
}
rarefiedDiversity
barplot(rarefiedDiversity)
class(rarefiedDiversity)
barplot(matrix(rarefiedDiversity))
class(rarefiedDiversity)
length(rarefiedDiversity)
nrow(rarefiedDiversity)
ncol(rarefiedDiversity)
class(rarefiedDiversity$X2016)
?barplot
barplot(rarefiedDiversity[1,])
barplot(rarefiedDiversity[1,])
barplot(as.vector(rarefiedDiversity[1,]))
rarefiedDiversity[1,]
class(rarefiedDiversity[1,])
barplot(as.numeric(rarefiedDiversity[1,]))
barplot(as.numeric(rarefiedDiversity[1,]), horiz=TRUE)
barplot(as.numeric(rarefiedDiversityEqSamp[1,]), horiz=TRUE)
barplot(as.numeric(rarefiedDiversityEqSamp[1,]))
getwd()
2:1
nrow(sampleSize)
?matrix
matrix(c(2:(nrow(sampleSize)+1),rep(1,nrow(sampleSize))), nrow=nrow(sampleSize), ncol=2)
plot(coastalCounties, col=c('blue','lightblue'))
plot(coastalCounties[is.element(coastalCounties$NAME, focalCounties),], col=c('blue','lightblue'))#
plot(coastalCounties, add=TRUE)
plot(coastalCounties[is.element(coastalCounties$NAME, focalCounties),], col=c('blue','lightblue'))#
plot(coastalCounties, add=TRUE)
i %% 2
i %% 2
1:9 %% 2
1:9 %% 2 + 1
?spTransofrm
?spTransoform
?spTransform
class(counties)
plot(coastalCounties, border=NA)
plotColors <- c('blue','lightblue')#
pdf(file="figures/countyRarefaction.pdf", height=10, width=8)#
layout(matrix(c(2:(nrow(sampleSize)+1),rep(1,nrow(sampleSize))), nrow=nrow(sampleSize), ncol=2), widths=c(0.4, 0.6), byrow=FALSE)#
plot(coastalCounties, border=NA)#
for(i in 1:nrow(sampeSize)) {#
	plot(coastalCounties[coastalCounties$NAME == colnames(sampleSize)[i],], col=plotColors[i %% 2 + 1], border=NA, add=TRUE)#
}#
plot(coastalCounties, add=TRUE)#
dev.off()
pdf(file="figures/countyRarefaction.pdf", height=10, width=8)#
layout(matrix(c(2:(nrow(sampleSize)+1),rep(1,nrow(sampleSize))), nrow=nrow(sampleSize), ncol=2, byrow=FALSE), widths=c(0.4, 0.6))#
plot(coastalCounties, border=NA)#
for(i in 1:nrow(sampeSize)) {#
	plot(coastalCounties[coastalCounties$NAME == colnames(sampleSize)[i],], col=plotColors[i %% 2 + 1], border=NA, add=TRUE)#
}#
plot(coastalCounties, add=TRUE)#
dev.off()
plotColors <- c('blue','lightblue')#
pdf(file="figures/countyRarefaction.pdf", height=10, width=8)#
layout(matrix(c(2:(nrow(sampleSize)+1),rep(1,nrow(sampleSize))), nrow=nrow(sampleSize), ncol=2, byrow=FALSE), widths=c(0.4, 0.6))#
plot(coastalCounties, border=NA)#
for(i in 1:nrow(sampleSize)) {#
	plot(coastalCounties[coastalCounties$NAME == colnames(sampleSize)[i],], col=plotColors[i %% 2 + 1], border=NA, add=TRUE)#
}#
plot(coastalCounties, add=TRUE)#
dev.off()
i
colnames(sampleSize)[i]
plotColors <- c('blue','lightblue')#
pdf(file="figures/countyRarefaction.pdf", height=10, width=8)#
layout(matrix(c(2:(nrow(sampleSize)+1),rep(1,nrow(sampleSize))), nrow=nrow(sampleSize), ncol=2, byrow=FALSE), widths=c(0.4, 0.6))#
plot(coastalCounties, border=NA)#
for(i in 1:nrow(sampleSize)) {#
	plot(coastalCounties[coastalCounties$NAME == rownames(sampleSize)[i],], col=plotColors[i %% 2 + 1], border=NA, add=TRUE)#
}#
plot(coastalCounties, add=TRUE)#
dev.off()
i <- 1
barplot(as.numeric(rarefiedDiversityEqSamp[i,]))
barplot(as.numeric(rarefiedDiversityEqSamp[i,]));box()
barplot(as.numeric(rarefiedDiversityEqSamp[i,]), );box()
?barplot
barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=2016:2018, col="blue");box()
?par
barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=2016:2018, col="blue", xaxs="i")
barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=2016:2018, col="blue", xaxs="s")
barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=2016:2018, col="blue", xaxs="r")
barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=2016:2018, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i])
plotColors <- c('blue','lightblue')#
pdf(file="figures/countyRarefaction.pdf", height=10, width=8)#
layout(matrix(c((nrow(sampleSize)+1):2,rep(1,nrow(sampleSize))), nrow=nrow(sampleSize), ncol=2, byrow=FALSE), widths=c(0.4, 0.6))#
plot(coastalCounties, border=NA)#
for(i in 1:nrow(sampleSize)) {#
	plot(coastalCounties[coastalCounties$NAME == rownames(sampleSize)[i],], col=plotColors[i %% 2 + 1], border=NA, add=TRUE)#
}#
plot(coastalCounties, add=TRUE)#
#
for(i in 1:nrow(sampleSize)) {#
	par(las=1)#
	barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=2016:2018, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i])#
}#
dev.off()
barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=2016:2018, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i])
par(las=1)#
	barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=2016:2018, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i])
?par
par(las=1, c(4, 4, 3, 0.5) + 0.1)#
	barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=2016:2018, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i])
par(las=1, c(4, 4, 3, 0.5) + 0.1)#
	barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=2016:2018, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i])
par(las=1, c(2, 4, 3, 0.5) + 0.1)#
	barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=2016:2018, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i])
par(las=1, c(2, 4, 3, 0.5) + 0.1)#
	barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=2016:2018, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i])
par(las=1, c(2, 4, 3, 0.5) + 0.1)#
	barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=2016:2018, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i], ylab="Number of species")
par(las=1, c(2, 4, 2, 0) + 0.1)#
	barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=2016:2018, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i], ylab="Number of species")
par(las=1, mar=c(2, 4, 2, 0) + 0.1)#
	barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=2016:2018, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i], ylab="Number of species")
par(las=1, mar=c(4, 4, 2, 0) + 0.1)#
	barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=2016:2018, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i], ylab="Number of species")
par(las=1, mar=c(4, 4, 2, 0) + 0.1, cex.axis=1.25, cex.lab=1.25)#
	barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=2016:2018, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i], ylab="Number of species")
plotColors <- c('blue','lightblue')#
pdf(file="figures/countyRarefaction.pdf", height=10, width=8)#
layout(matrix(c((nrow(sampleSize)+1):2,rep(1,nrow(sampleSize))), nrow=nrow(sampleSize), ncol=2, byrow=FALSE), widths=c(0.4, 0.6))#
plot(coastalCounties, border=NA)#
for(i in 1:nrow(sampleSize)) {#
	plot(coastalCounties[coastalCounties$NAME == rownames(sampleSize)[i],], col=plotColors[i %% 2 + 1], border=NA, add=TRUE)#
}#
plot(coastalCounties, add=TRUE)#
#
for(i in 1:nrow(sampleSize)) {#
	par(las=1, mar=c(4, 4, 2, 0) + 0.1, cex.axis=1.25, cex.lab=1.25)#
	barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=2016:2018, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i], ylab="Estimated species")#
}#
dev.off()
max(sampleSize)
max(rarefiedDiversityEqSamp)
max(rarefiedDiversity)
matrix(c((nrow(sampleSize)+1):2,rep(1,nrow(sampleSize)),rep(nrow(sampleSize)+2,nrow(sampleSize))), nrow=nrow(sampleSize), ncol=2, byrow=FALSE)
matrix(c((nrow(sampleSize)+1):2,rep(1,nrow(sampleSize)),rep(nrow(sampleSize)+2,nrow(sampleSize))), nrow=nrow(sampleSize), ncol=3, byrow=FALSE)
matrix(c((rep(nrow(sampleSize)+2,nrow(sampleSize)),nrow(sampleSize)+1):2,rep(1,nrow(sampleSize))), nrow=nrow(sampleSize), ncol=3, byrow=FALSE)
plotColors <- c('blue','lightblue')#
pdf(file="figures/countyRarefaction.pdf", height=10, width=8)#
layout(matrix(c((rep(nrow(sampleSize)+2,nrow(sampleSize)),nrow(sampleSize)+1):2,rep(1,nrow(sampleSize))), nrow=nrow(sampleSize), ncol=3, byrow=FALSE), widths=c(0.1, 0.3, 0.6))#
plot(coastalCounties, border=NA)#
for(i in 1:nrow(sampleSize)) {#
	plot(coastalCounties[coastalCounties$NAME == rownames(sampleSize)[i],], col=plotColors[i %% 2 + 1], border=NA, add=TRUE)#
}#
plot(coastalCounties, add=TRUE)#
#
for(i in 1:nrow(sampleSize)) {#
	par(las=1, mar=c(4, 4, 2, 0) + 0.1, cex.axis=1.25, cex.lab=1.25)#
	if(i == 1) {#
		xlabels <- 2016:2018#
	} else {#
		xlabels <- NA#
	}#
	barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=xlabels, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i], ylab="")#
}#
dev.off()
layout(matrix(c(rep(nrow(sampleSize)+2,nrow(sampleSize)),nrow(sampleSize)+1):2,rep(1,nrow(sampleSize))), nrow=nrow(sampleSize), ncol=3, byrow=FALSE), widths=c(0.1, 0.3, 0.6))
plotColors <- c('blue','lightblue')#
pdf(file="figures/countyRarefaction.pdf", height=10, width=8)#
layout(matrix(c(rep(nrow(sampleSize)+2,nrow(sampleSize)),nrow(sampleSize)+1):2,rep(1,nrow(sampleSize)), nrow=nrow(sampleSize), ncol=3, byrow=FALSE), widths=c(0.1, 0.3, 0.6))#
plot(coastalCounties, border=NA)#
for(i in 1:nrow(sampleSize)) {#
	plot(coastalCounties[coastalCounties$NAME == rownames(sampleSize)[i],], col=plotColors[i %% 2 + 1], border=NA, add=TRUE)#
}#
plot(coastalCounties, add=TRUE)#
#
for(i in 1:nrow(sampleSize)) {#
	par(las=1, mar=c(4, 4, 2, 0) + 0.1, cex.axis=1.25, cex.lab=1.25)#
	if(i == 1) {#
		xlabels <- 2016:2018#
	} else {#
		xlabels <- NA#
	}#
	barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=xlabels, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i], ylab="")#
}#
dev.off()
dev.off()
plotColors <- c('blue','lightblue')#
pdf(file="figures/countyRarefaction.pdf", height=10, width=8)#
layout(matrix(c(rep(nrow(sampleSize)+2,nrow(sampleSize)),nrow(sampleSize)+1):2,rep(1,nrow(sampleSize)), nrow=nrow(sampleSize), ncol=3, byrow=FALSE), widths=c(0.1, 0.3, 0.6))#
plot(coastalCounties, border=NA)#
for(i in 1:nrow(sampleSize)) {#
	plot(coastalCounties[coastalCounties$NAME == rownames(sampleSize)[i],], col=plotColors[i %% 2 + 1], border=NA, add=TRUE)#
}#
plot(coastalCounties, add=TRUE)#
#
for(i in 1:nrow(sampleSize)) {#
	par(las=1, mar=c(4, 4, 2, 0) + 0.1, cex.axis=1.25, cex.lab=1.25)#
	if(i == 1) {#
		xlabels <- 2016:2018#
	} else {#
		xlabels <- NA#
	}#
	barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=xlabels, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i], ylab="")#
}#
dev.off()
matrix(c(rep(nrow(sampleSize)+2,nrow(sampleSize)),nrow(sampleSize)+1):2,rep(1,nrow(sampleSize)), nrow=nrow(sampleSize), ncol=3, byrow=FALSE)
plotColors <- c('blue','lightblue')#
pdf(file="figures/countyRarefaction.pdf", height=10, width=8)#
layout(matrix(c(rep(nrow(sampleSize)+2),nrow(sampleSize)),nrow(sampleSize)+1):2,rep(1,nrow(sampleSize))), nrow=nrow(sampleSize), ncol=3, byrow=FALSE), widths=c(0.1, 0.3, 0.6))#
plot(coastalCounties, border=NA)#
for(i in 1:nrow(sampleSize)) {#
	plot(coastalCounties[coastalCounties$NAME == rownames(sampleSize)[i],], col=plotColors[i %% 2 + 1], border=NA, add=TRUE)#
}#
plot(coastalCounties, add=TRUE)#
#
for(i in 1:nrow(sampleSize)) {#
	par(las=1, mar=c(4, 4, 2, 0) + 0.1, cex.axis=1.25, cex.lab=1.25)#
	if(i == 1) {#
		xlabels <- 2016:2018#
	} else {#
		xlabels <- NA#
	}#
	barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=xlabels, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i], ylab="")#
}#
dev.off()
matrix(c(rep(nrow(sampleSize)+2),nrow(sampleSize)),nrow(sampleSize)+1):2,rep(1,nrow(sampleSize))), nrow=nrow(sampleSize), ncol=3, byrow=FALSE)
nrow(sampleSize)+1):2
plotColors <- c('blue','lightblue')#
pdf(file="figures/countyRarefaction.pdf", height=10, width=8)#
layout(matrix(c(rep(nrow(sampleSize)+2,nrow(sampleSize)),(nrow(sampleSize)+1):2,rep(1,nrow(sampleSize))), nrow=nrow(sampleSize), ncol=3, byrow=FALSE), widths=c(0.1, 0.3, 0.6))#
plot(coastalCounties, border=NA)#
for(i in 1:nrow(sampleSize)) {#
	plot(coastalCounties[coastalCounties$NAME == rownames(sampleSize)[i],], col=plotColors[i %% 2 + 1], border=NA, add=TRUE)#
}#
plot(coastalCounties, add=TRUE)#
#
for(i in 1:nrow(sampleSize)) {#
	par(las=1, mar=c(4, 4, 2, 0) + 0.1, cex.axis=1.25, cex.lab=1.25)#
	if(i == 1) {#
		xlabels <- 2016:2018#
	} else {#
		xlabels <- NA#
	}#
	barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=xlabels, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i], ylab="")#
}#
dev.off()
plotColors <- c('blue','lightblue')#
pdf(file="figures/countyRarefaction.pdf", height=10, width=8)#
layout(matrix(c(rep(nrow(sampleSize)+2,nrow(sampleSize)),(nrow(sampleSize)+1):2,rep(1,nrow(sampleSize))), nrow=nrow(sampleSize), ncol=3, byrow=FALSE), widths=c(0.1, 0.3, 0.6))#
plot(coastalCounties, border=NA)#
for(i in 1:nrow(sampleSize)) {#
	plot(coastalCounties[coastalCounties$NAME == rownames(sampleSize)[i],], col=plotColors[i %% 2 + 1], border=NA, add=TRUE)#
}#
plot(coastalCounties, add=TRUE)#
#
for(i in 1:nrow(sampleSize)) {#
	par(las=1, mar=c(4, 4, 2, 0) + 0.1, cex.axis=1.25, cex.lab=1.25)#
	if(i == 1) {#
		xlabels <- 2016:2018#
	} else {#
		xlabels <- NA#
	}#
	barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=xlabels, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i], ylab="")#
}#
dev.off()
pretty(range(rarefiedDiversityEqSamp))
pretty(c(0,max(rarefiedDiversityEqSamp)))
c(0,max(rarefiedDiversityEqSamp))
plot(1:10, type="n", axes=FALSE, xlab="",yalb="")
par(mar=c(0, 0, 0, 0) + 0.1)#
plot(1:10, type="n", axes=FALSE, xlab="",ylab="")
par(mar=c(0, 0, 0, 0) + 0.1)#
plot(1:10, type="n", axes=FALSE, xlab="",ylab="")#
text(5,5, "Estimated number of Species", cex=1.25, srt=90)
plotColors <- c('blue','lightblue')#
pdf(file="figures/countyRarefaction.pdf", height=10, width=8)#
layout(matrix(c(rep(nrow(sampleSize)+2,nrow(sampleSize)),(nrow(sampleSize)+1):2,rep(1,nrow(sampleSize))), nrow=nrow(sampleSize), ncol=3, byrow=FALSE), widths=c(0.1, 0.3, 0.6))#
plot(coastalCounties, border=NA)#
for(i in 1:nrow(sampleSize)) {#
	plot(coastalCounties[coastalCounties$NAME == rownames(sampleSize)[i],], col=plotColors[i %% 2 + 1], border=NA, add=TRUE)#
}#
plot(coastalCounties, add=TRUE)#
#
for(i in 1:nrow(sampleSize)) {#
	par(las=1, mar=c(4, 2, 2, 0) + 0.1, cex.axis=1.25, cex.lab=1.25)#
	if(i == 1) {#
		xlabels <- 2016:2018#
	} else {#
		xlabels <- NA#
	}#
	barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=xlabels, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i], ylab="", ylim=c(0,max(rarefiedDiversityEqSamp)))#
}#
#
par(mar=c(0, 0, 0, 0) + 0.1)#
plot(1:10, type="n", axes=FALSE, xlab="",ylab="")#
text(5,5, "Estimated number of Species", cex=1.25, srt=90)#
dev.off()
plotColors <- c('blue','lightblue')#
pdf(file="figures/countyRarefaction.pdf", height=10, width=8)#
layout(matrix(c(rep(nrow(sampleSize)+2,nrow(sampleSize)),(nrow(sampleSize)+1):2,rep(1,nrow(sampleSize))), nrow=nrow(sampleSize), ncol=3, byrow=FALSE), widths=c(0.1, 0.3, 0.6))#
plot(coastalCounties, border=NA)#
for(i in 1:nrow(sampleSize)) {#
	plot(coastalCounties[coastalCounties$NAME == rownames(sampleSize)[i],], col=plotColors[i %% 2 + 1], border=NA, add=TRUE)#
}#
plot(coastalCounties, add=TRUE)#
#
for(i in 1:nrow(sampleSize)) {#
	par(las=1, mar=c(3, 2, 1.5, 0) + 0.1, cex.axis=1.25, cex.lab=1.25)#
	if(i == 1) {#
		xlabels <- 2016:2018#
	} else {#
		xlabels <- NA#
	}#
	barplot(as.numeric(rarefiedDiversityEqSamp[i,]), names.arg=xlabels, col=plotColors[i %% 2 + 1], main=rownames(sampleSize)[i], ylab="", ylim=c(0,max(rarefiedDiversityEqSamp)), yaxt="n")#
	axis(side=2, at=c(0,50,100))#
}#
#
par(mar=c(0, 0, 0, 0) + 0.1)#
plot(1:10, type="n", axes=FALSE, xlab="",ylab="")#
text(5,5, "Estimated number of Species", cex=1.25, srt=90)#
dev.off()
q()
