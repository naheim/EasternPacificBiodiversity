x <- read.delim("https://paleobiodb.org/data1.2/occs/list.tsv?base_name=Metazoa&interval=Cambrian,Pleistocene&show=paleoloc,class&idreso=lump_gensub")
pbdb <- data.frame()#
ints <- c("Cambrian","Silurian","Carboniferous","Triassic","Cretaceous","Paleogene","Pleistocene")#
#
for(i in 2:length(ints)) {#
	temp <- read.delim(paste("https://paleobiodb.org/data1.2/occs/list.tsv?base_name=Metazoa&interval=",ints[i-1],",",ints[i],"&show=paleoloc,class&idreso=lump_gensub", sep=""))#
	pbdb <- rbind(pbdb, ints)#
}
i
pbdbUri <- paste("https://paleobiodb.org/data1.2/occs/list.tsv?base_name=Metazoa&interval=",ints[i-1],",",ints[i],"&show=paleoloc,class&idreso=lump_gensub", sep="")
pbdbUri
pbdbUri <- paste("https://paleobiodb.org/data1.2/occs/list.tsv?base_name=Metazoa&interval=",ints[i-1],",",ints[i],"&show=paleoloc,class&idreso=lump_gensub", sep="")
temp <- read.delim(pbdbUri)
geoPeriods <- read.delim("https://paleobiodb.org/data1.2/intervals/list.tsv?scale=1&scale_level=3")
geoPeriods
geoPeriods <- read.delim("https://paleobiodb.org/data1.2/intervals/list.tsv?scale=1&scale_level=3&min_ma=541")
geoPeriods
geoPeriods <- read.delim("https://paleobiodb.org/data1.2/intervals/list.tsv?scale=1&scale_level=3&max_ma=541")
geoPeriods
i
pbdbUri <- paste("https://paleobiodb.org/data1.2/occs/list.tsv?base_name=Metazoa&interval=",geoPeriods$interval_name[i],"&show=paleoloc,classext&idreso=lump_gensub", sep="")
temp <- read.delim(pbdbUri)
pbdbUri <- paste("http://paleobiodb.org/data1.2/occs/list.tsv?base_name=Metazoa&interval=",geoPeriods$interval_name[i],"&show=paleoloc,classext&idreso=lump_gensub", sep="")
temp <- read.delim(pbdbUri)
pbdbUri
pbdbUri <- paste("http://paleobiodb.org/data1.2/occs/list.tsv?base_name=Metazoa&interval=",geoPeriods$interval_name[i],"&show=paleoloc,classext&idreso=lump_gensub&limit=all", sep="")
temp <- read.delim(pbdbUri)
URLencode(pbdbUri)
pbdbUri <- paste("http://paleobiodb.org/data1.2/occs/list.tsv?base_name=Animalia&interval=",geoPeriods$interval_name[i],"&show=paleoloc,classext&idreso=lump_gensub&limit=all", sep="")
temp <- read.delim(pbdbUri)
pbdbUri <- paste("https://paleobiodb.org/data1.2/occs/list.tsv?base_name=Animalia&interval=",geoPeriods$interval_name[i],"&show=paleoloc,classext&idreso=lump_gensub&limit=all", sep="")
temp <- read.delim(pbdbUri)
i
pbdbUri
pbdbUri <- paste("https://paleobiodb.org/data1.2/occs/list.tsv?all_records&base_name=Metazoa&interval=",geoPeriods$interval_name[i],"&show=paleoloc,classext&idreso=lump_gensub", sep="")#
	temp <- read.delim(pbdbUri)
pbdbUri <- paste("https://paleobiodb.org/data1.2/occs/list.tsv?all_records&base_name=Metazoa","&show=paleoloc,classext&idreso=lump_gensub", sep="")#
	temp <- read.delim(pbdbUri)
pbdbUri <- paste("https://paleobiodb.org/data1.2/occs/list.tsv?all_records","&show=paleoloc,classext&idreso=lump_gensub", sep="")#
	temp <- read.delim(pbdbUri)
pbdb <- data.frame()#
geoIntervals <- read.delim("https://paleobiodb.org/data1.2/intervals/list.tsv?scale=1&scale_level=2&max_ma=541")#
#
for(i in 1:length(geoIntervals)) {#
	pbdbUri <- paste("https://paleobiodb.org/data1.2/occs/list.tsv?all_records&base_name=Animalia&interval=",geoIntervals$interval_name[i],"&show=paleoloc,classext&idreso=lump_gensub&limit=all", sep="")#
	temp <- read.delim(pbdbUri)#
	pbdb <- rbind(pbdb, ints)#
}
i
tmep
temp
geoIntervals <- read.delim("https://paleobiodb.org/data1.2/intervals/list.tsv?scale=1&scale_level=1&max_ma=541")
geoIntervals
geoIntervals <- read.delim("https://paleobiodb.org/data1.2/intervals/list.tsv?scale=1&max_ma=541")
geoIntervals
1:nrow(geoIntervals)
geoIntervals <- read.delim("https://paleobiodb.org/data1.2/intervals/list.tsv?scale=1&scale_level=5&max_ma=541")
1:nrow(geoIntervals)
pbdb <- data.frame()#
geoIntervals <- read.delim("https://paleobiodb.org/data1.2/intervals/list.tsv?scale=1&scale_level=5&max_ma=541")#
#
for(i in 1:nrow(geoIntervals)) {#
	pbdbUri <- paste("https://paleobiodb.org/data1.2/occs/list.tsv?all_records&base_name=Animalia&interval=",geoIntervals$interval_name[i],"&show=paleoloc,classext&idreso=lump_gensub&limit=all", sep="")#
	temp <- read.delim(pbdbUri)#
	pbdb <- rbind(pbdb, ints)#
	print(geoIntervals$interval_name[i])#
}
pbdbUri <- URLencode(paste("https://paleobiodb.org/data1.2/occs/list.tsv?all_records&base_name=Animalia&interval=",geoIntervals$interval_name[i],"&show=paleoloc,classext&idreso=lump_gensub&limit=all", sep=""))
pbdbUri
pbdbUri <- URLencode(paste("https://paleobiodb.org/data1.2/occs/list.tsv?all_records&base_name=Animalia&interval=",geoIntervals$interval_name[i],"&show=paleoloc,classext&idreso=lump_gensub&limit=all", sep=""))#
	temp <- read.delim(pbdbUri)#
	pbdb <- rbind(pbdb, ints)#
	print(geoIntervals$interval_name[i])
pbdb <- data.frame()#
geoIntervals <- read.delim("https://paleobiodb.org/data1.2/intervals/list.tsv?scale=1&scale_level=5&max_ma=541")#
#
for(i in 1:nrow(geoIntervals)) {#
	pbdbUri <- URLencode(paste("https://paleobiodb.org/data1.2/occs/list.tsv?all_records&base_name=Animalia&interval=",geoIntervals$interval_name[i],"&show=paleoloc,classext&idreso=lump_gensub&limit=all", sep=""))#
	temp <- read.delim(pbdbUri)#
	pbdb <- rbind(pbdb, ints)#
	print(as.character(geoIntervals$interval_name[i])) ## just to keep track in the console#
}
nrow(pbdb)
head(pbdb)
pbdb <- data.frame()#
maxAge <- read.delim("https://paleobiodb.org/data1.2/intervals/single.tsv?name=Cambrian")#
geoIntervals <- read.delim(paste("https://paleobiodb.org/data1.2/intervals/list.tsv?scale=1&scale_level=4&max_ma=",maxAge$max_ma[1], sep=""))
geoIntervals
pbdbUri <- URLencode(paste("https://paleobiodb.org/data1.2/occs/list.tsv?all_records&base_name=Animalia&interval=",geoIntervals$interval_name[i],"&show=paleoloc,classext&idreso=lump_gensub&limit=all", sep=""))#
	temp <- read.delim(pbdbUri)#
	pbdb <- rbind(pbdb, temp)#
	print(as.character(geoIntervals$interval_name[i])) ## just to keep track in the console
pbdbUri
geoIntervals
i <- 7
pbdbUri <- URLencode(paste("https://paleobiodb.org/data1.2/occs/list.tsv?all_records&base_name=Animalia&interval=",geoIntervals$interval_name[i],"&show=paleoloc,classext&idreso=lump_gensub&limit=all", sep=""))#
	temp <- read.delim(pbdbUri)#
	pbdb <- rbind(pbdb, temp)
nrow(temp)
pbdb <- data.frame()#
maxAge <- read.delim("https://paleobiodb.org/data1.2/intervals/single.tsv?name=Cambrian")#
geoIntervals <- read.delim(paste("https://paleobiodb.org/data1.2/intervals/list.tsv?scale=1&scale_level=4&max_ma=",maxAge$max_ma[1], sep=""))#
#
for(i in 1:nrow(geoIntervals)) {#
	pbdbUri <- URLencode(paste("https://paleobiodb.org/data1.2/occs/list.tsv?all_records&base_name=Animalia&interval=",geoIntervals$interval_name[i],"&show=paleoloc,classext&idreso=lump_gensub&limit=all", sep=""))#
	temp <- read.delim(pbdbUri)#
	pbdb <- rbind(pbdb, temp)#
	print(as.character(geoIntervals$interval_name[i])) ## just to keep track in the console#
}
nrow(pbdb)
head(pbdb)
length(uniqeu(pbdb[,1]))
length(unique(pbdb[,1]))
load("/Volumes/Blastoid/noelheim_data/Desktop/pbdbAnimals.Rdata")
nrow(pbdb)
head(pbdb)
length(unique(pbdb[,1]))
nrow(unique(pbdb))
library(velociraptor)
library(velociraptr)
? velociraptr
cleanTaxonomy
nrow(subset(pbdb, genus == ""))
nrow(subset(pbdb, is.na(genus)))
?cleanTaxonomy'
?cleanTaxonomy
constrainAges
citation(;'velociraptr')
citation('velociraptr')
head(pbdb)
? constrainAges
nrow(pbdb)
pbdb <- unique(pbdb) # eliminate duplicates from poorly resolved genera#
pbdb <- subset(pbdb, !is.na(genus)) # make sure there are not taxa without genus names#
pbdb <- constrainAges(pbdb, geoIntervals)
nrow(pbdb)
head(geoIntervals)
constrainAges <- function (Data, Timescale) #
{#
    Data[, "early_interval"] <- as.character(Data[, "early_interval"])#
    Data[, "late_interval"] <- as.character(Data[, "late_interval"])#
    for (i in 1:nrow(Timescale)) {#
        EarlyPos <- which(Data[, "max_ma"] > Timescale[i, "t_age"] & #
            Data[, "max_ma"] <= Timescale[i, "b_age"])#
        Data[EarlyPos, "early_interval"] <- as.character(Timescale[i, #
            "interval_name"])#
        LatePos <- which(Data[, "min_ma"] >= Timescale[i, "t_age"] & #
            Data[, "min_ma"] < Timescale[i, "b_age"])#
        Data[LatePos, "late_interval"] <- as.character(Timescale[i, #
            "interval_name"])#
    }#
    Data <- Data[Data[, "early_interval"] == Data[, "late_interval"], #
        ]#
    return(Data)#
}
load("/Volumes/Blastoid/noelheim_data/Desktop/pbdbAnimals.Rdata")
pbdb <- unique(pbdb) # eliminate duplicates from poorly resolved genera#
pbdb <- subset(pbdb, !is.na(genus)) # make sure there are not taxa without genus names#
pbdb <- constrainAges(pbdb, geoIntervals) # e
nrow(pbdb)
load("/Volumes/Blastoid/noelheim_data/Desktop/pbdbAnimals.Rdata")
nrow(pbdb)
pbdb <- unique(pbdb) # eliminate duplicates from poorly resolved genera
nrow(pbdb)
pbdb <- subset(pbdb, !is.na(genus)) # make sure there are not taxa without genus names
nrow(pbdb)
constrainAges <- function (Data, Timescale) #
{#
    Data[, "early_interval"] <- as.character(Data[, "early_interval"])#
    Data[, "late_interval"] <- as.character(Data[, "late_interval"])#
    for (i in 1:nrow(Timescale)) {#
        EarlyPos <- which(Data[, "max_ma"] > Timescale[i, "min_ma"] & Data[, "max_ma"] <= Timescale[i, "max_ma"])#
        Data[EarlyPos, "early_interval"] <- as.character(Timescale[i, "interval_name"])#
        LatePos <- which(Data[, "min_ma"] >= Timescale[i, "min_ma"] &  Data[, "min_ma"] < Timescale[i, "max_ma"])#
        Data[LatePos, "late_interval"] <- as.character(Timescale[i,"interval_name"])#
    }#
    Data <- Data[Data[, "early_interval"] == Data[, "late_interval"], ]#
    return(Data)#
}
pbdb <- constrainAges(pbdb, geoIntervals) # eliminate occurrences not constrained to a single age
nrow(pbdb)
q()
8000/135
8000/135*3
exp(5)
log10(500)
log10(1000)
log10(10000)
log10(100000)
q()
6^2
6^(2/3)
(6^2)^(1/3)
noam <- read.csv("https://macrostrat.org/api/units?interval_name=Phanerozoic&response=long&format=csv", header=TRUE)
nrow(noam)
colnanmes(noam)
colnames(noam)
library(jsonlite)
?fromjson
?jsonlite
noam <- fromJSON("https://macrostrat.org/api/units?interval_name=Phanerozoic&response=long&format=json", header=TRUE)
noam <- fromJSON("https://macrostrat.org/api/units?interval_name=Phanerozoic&response=long&format=json")
head(noam)
head(noam$success$data)
noam <- read.csv("https://macrostrat.org/api/units?interval_name=Phanerozoic&response=long&format=csv&project_id=1", header=TRUE)
liths <- read.csv("https://macrostrat.org/api/defs/lithologies?all&format=csv", header=TRUE)
head(liths)
liths
table(liths$lith_type)
table(liths$type)
table(liths$class)
nrow(noam)
length(levels(noam$lith))
head(noam$lith)
noam <- read.csv("https://macrostrat.org/api/units?interval_name=Phanerozoic,Pliocene&response=long&format=csv&project_id=1", header=TRUE)
timescale <- read.csv("https://macrostrat.org/api/defs/intervals?timescale=international%20ages", header=TRUE)
timescale <- read.csv("https://macrostrat.org/api/defs/intervals?timescale=international%20ages&format=csv", header=TRUE)
timescale
timescale <- subset(timescale, b_age >= b_age[name == 'Piacenzian'])
timescale
timescale <- read.csv("https://macrostrat.org/api/defs/intervals?timescale=international%20ages&format=csv&?late_age=2.588&early_age=541", header=TRUE)
timescale
timescale <- read.csv("https://macrostrat.org/api/defs/intervals?timescale=international%20ages&format=csv&late_age=2.588&early_age=541", header=TRUE)
timescale
timescale <- read.csv("https://macrostrat.org/api/defs/intervals?timescale=international%20ages&format=csv", header=TRUE)
timescale
timescale <- subset(timescale, b_age >= b_age[name == 'Piacenzian'])
timescale
12.99*36
9.99*36
?predict
10.5/89
?scale
head(noam)
nrow(subset(noam, is.na(strat_name_id)))
nrow(subset(noam, is.na(strat_name_id)))/nrow(noam)
range(subset(noam, is.na(strat_name_id))$b_age)
2.9e-3
2.9e3
x <- read.csv(file="https://paleobiodb.org/data1.2/specs/measurements.csv?datainfo&rowcount&base_name=Brachiopoda&taxon_reso=species&interval=Permian", header=T)
nrow(x)
head(x)
x <- read.csv(file="https://paleobiodb.org/data1.2/specs/measurements.csv?rowcount&base_name=Brachiopoda&taxon_reso=species&interval=Permian", header=T)
x <- read.csv(file="https://paleobiodb.org/data1.2/specs/measurements.csv?base_name=Brachiopoda&taxon_reso=species&interval=Permian", header=T)
head(x)
nrow(x)
table(x$measurement)
length(unique(x$specimen_no))
x <- read.csv(file="https://paleobiodb.org/data1.2/specs/measurements.csv?base_name=Brachiopoda&taxon_reso=species&interval=Permian&show=full", header=T)
x <- read.csv(file="https://paleobiodb.org/data1.2/specs/measurements.csv?base_name=Brachiopoda&taxon_reso=species&interval=Permian&show=spec,class", header=T)
nrow(x)
head(x)
x <- read.csv(file="https://paleobiodb.org/data1.2/specs/measurements.csv?base_name=Brachiopoda&taxon_reso=species&interval=Permian&show=spec,class,ref,entname", header=T)
nrow(x)
length(unique(x$accepted_name))
y <- data.frame('maxSize'=tapply(x$average, x$accepted_name, min, na.rm=TRUE), 'maxAge'=tapply(x$max_ma, x$accepted_name, max, na.rm=TRUE),'minAge'=tapply(x$min_ma, x$accepted_name, min, na.rm=TRUE))
head(y)
nrow(y)
range(y$maxSize)
range(x$min, na.rm=T)
range(x$max, na.rm=T)
head(x)
table(x$authorizer)
levels(x$accepted_name)
x <- read.csv(file="https://paleobiodb.org/data1.2/specs/measurements.csv?base_name=Brachiopoda&taxon_reso=species&interval=Permian,Triassic&show=spec,class,ref,entname", header=TRUE)#
permBrachs <- data.frame('maxSize'=tapply(x$average, x$accepted_name, min, na.rm=TRUE), 'maxAge'=tapply(x$max_ma, x$accepted_name, max, na.rm=TRUE),'minAge'=tapply(x$min_ma, x$accepted_name, min, na.rm=TRUE))
nrow(permBrachs)
table(x$authorizer)
x <- read.csv(file="https://paleobiodb.org/data1.2/specs/measurements.csv?base_name=Brachiopoda&taxon_reso=species&interval=Carboniferous,Triassic&show=spec,class,ref,entname", header=TRUE)#
permBrachs <- data.frame('maxSize'=tapply(x$average, x$accepted_name, min, na.rm=TRUE), 'maxAge'=tapply(x$max_ma, x$accepted_name, max, na.rm=TRUE),'minAge'=tapply(x$min_ma, x$accepted_name, min, na.rm=TRUE))
nrow(permBrachs)
table(x$authorizer)
4546+116
hist(permBrachs$maxAge)
x <- read.csv(file="https://paleobiodb.org/data1.2/specs/measurements.csv?base_name=Brachiopoda&taxon_reso=species&interval=Permian&show=spec,class,ref,entname", header=TRUE)#
permBrachs <- data.frame('maxSize'=tapply(x$average, x$accepted_name, min, na.rm=TRUE), 'maxAge'=tapply(x$max_ma, x$accepted_name, max, na.rm=TRUE),'minAge'=tapply(x$min_ma, x$accepted_name, min, na.rm=TRUE))
head(x)
taply(x$average, x$measurement, max)
tapply(x$average, x$measurement, max)
rawData <- read.csv(file="https://paleobiodb.org/data1.2/specs/measurements.csv?base_name=Brachiopoda&taxon_reso=species&interval=Permian&show=spec,class,ref,entname", header=TRUE)#
#
speciesSizes <- data.frame('maxSize'=tapply(rawData$average, rawData$accepted_name, min, na.rm=TRUE), 'maxAge'=tapply(rawData$max_ma, rawData$accepted_name, max, na.rm=TRUE),'minAge'=tapply(rawData$min_ma, rawData$accepted_name, min, na.rm=TRUE))#
#
genusSizes <- data.frame('genus'=levels(rawData$genus), 'nSpecies'=tapply(rawData$accepted_name, rawData$genus, function(x){return(length(unqiue(x)))}), 'maxAge'=tapply(rawData$max_ma, rawData$genus, max, na.rm=TRUE),'minAge'=tapply(rawData$min_ma, rawData$genus, min, na.rm=TRUE))
genusSizes <- data.frame('genus'=levels(rawData$genus), 'nSpecies'=tapply(rawData$accepted_name, rawData$genus, function(x){return(length(unique(x)))}), 'maxAge'=tapply(rawData$max_ma, rawData$genus, max, na.rm=TRUE),'minAge'=tapply(rawData$min_ma, rawData$genus, min, na.rm=TRUE))
head(genusSizes)
nrow(genusSizes)
tapply(rawData$average, list(rawData$accepted_name, rawData$measurement), max, na.rm=TRUE)
head(tapply(rawData$average, list(rawData$accepted_name, rawData$measurement), max, na.rm=TRUE))
head(genusSizes)
speciesSizes <- data.frame('maxAge'=tapply(rawData$max_ma, rawData$accepted_name, max, na.rm=TRUE),'minAge'=tapply(rawData$min_ma, rawData$accepted_name, min, na.rm=TRUE), tapply(rawData$average, list(rawData$accepted_name, rawData$measurement), max, na.rm=TRUE))
head(speciesSizes)
speciesSizes <- data.frame('maxAge'=tapply(rawData$max_ma, rawData$accepted_name, max, na.rm=TRUE),'minAge'=tapply(rawData$min_ma, rawData$accepted_name, min, na.rm=TRUE), tapply(rawData$average, list(rawData$accepted_name, rawData$measurement), max, na.rm=TRUE), 'maxDim' = tapply(rawData$average, rawData$accepted_name, max, na.rm=TRUE))
head(speciesSizes)
plot(speciesSizes$length, speciesSizes$width, pch=16); abline(a=0,b=1,lty=2, col='red')
plot(speciesSizes$maxDim, speciesSizes$width, pch=16); abline(a=0,b=1,lty=2, col='red')
nrow(speciesSizes)
nrow(subset(speciesSizes, width==maxDim))
nrow(subset(speciesSizes, width==maxDim))/nrow(speciesSizes)
tapply(rawData$genus, rawData$accepted_name, max)
tapply(rawData$genus, rawData$accepted_name, function(x){return(x[1])})
tapply(rawData$genus, rawData$accepted_name, function(x){return(as.character(x[1]))})
head(tapply(rawData$genus, rawData$accepted_name, function(x){return(as.character(x[1]))}))
speciesSizes <- data.frame('genus'=factor(tapply(rawData$genus, rawData$accepted_name, function(x){return(as.character(x[1]))})), 'maxAge'=tapply(rawData$max_ma, rawData$accepted_name, max, na.rm=TRUE),'minAge'=tapply(rawData$min_ma, rawData$accepted_name, min, na.rm=TRUE), tapply(rawData$average, list(rawData$accepted_name, rawData$measurement), max, na.rm=TRUE), 'maxDim' = tapply(rawData$average, rawData$accepted_name, max, na.rm=TRUE))
head(speciesSizes)
range(speciesSizes$maxDim)
genusSizes <- data.frame('nSpecies'=table(speciesSizes$genus), 'maxAge'=tapply(speciesSizes$max_ma, speciesSizes$genus, max, na.rm=TRUE),'minAge'=tapply(speciesSizes$min_ma, speciesSizes$genus, min, na.rm=TRUE), 'meanSize'=tapply(speciesSizes$maxDim, speciesSizes$genus, mean))
genusSizes <- data.frame('nSpecies'=table(speciesSizes$genus), 'maxAge'=tapply(speciesSizes$maxAge, speciesSizes$genus, max, na.rm=TRUE),'minAge'=tapply(speciesSizes$minAge, speciesSizes$genus, min, na.rm=TRUE), 'meanSize'=tapply(speciesSizes$maxDim, speciesSizes$genus, mean))
head(genusSizes)
q()
4*5
67000/60/50
58/40/50
58000/40/50
67000/56/50
58000/41/50
1334/270
1334/263
(1334-26)/263
(1334-263)/263
(1334-263)/
(1334-263)
240-145
(240-145)/12
169-146
(240-121)/12
205/8
244/8
q()
# set root base for proper file direction#
init.dir <- getwd()#
if(is.element(Sys.info()["nodename"], c("es-naheim.local","sr12-cf96e71ca1.stanford.edu"))) {#
	my.root <- "/Volumes/Blastoid/noelheim_data"#
} else {#
	my.root <- "/Users/noelheim"#
}#
Sys.setenv(TZ="America/Los_Angeles")#
#
library(jsonlite)#
#
source(paste(my.root,"/Box Sync/Includes/myFunctions.r", sep=""));#
setwd(paste(my.root,"/Box Sync/git/snapshotcalcoast", sep=""));#
## get list of snapshot cal coast projects#
projects <- fromJSON(URLencode('http://api.inaturalist.org/v1/projects?q=snapshot cal coast&per_page=200'))$results#
projId <- subset(projects, title=="Snapshot Cal Coast")$id#
#
## get number of observations and pages#
nObs <- fromJSON(URLencode(paste('http://api.inaturalist.org/v1/observations?project_id=',projId,'&rank=tribe,subtribe,genus,genushybrid,species,hybrid,subspecies,variety,form&per_page=1&order=desc&order_by=created_at', sep="")))$total_results#
if(nObs %% 200 == 0) {#
	nPages <- nObs/200#
} else {#
	nPages <- trunc(nObs/200)+1#
}
print(paste("There are ",nObs," observations on ",nPages," pages.", sep=""))
## download data#
calCoast <- data.frame()#
for(i in 1:nPages) {#
	obs <- fromJSON(URLencode(paste("http://api.inaturalist.org/v1/observations?project_id=",projId,"&rank=tribe,subtribe,genus,genushybrid,species,hybrid,subspecies,variety,form&page=",i,"&per_page=200&order=desc&order_by=created_at", sep="")))#
	calCoast[[i]] <- obs$results#
	if(i %% 2 == 0) print(i)#
}#
save(calCoast, file="data/calCoastObs.RData")
## download data#
calCoast <- list()#
for(i in 1:nPages) {#
	obs <- fromJSON(URLencode(paste("http://api.inaturalist.org/v1/observations?project_id=",projId,"&rank=tribe,subtribe,genus,genushybrid,species,hybrid,subspecies,variety,form&page=",i,"&per_page=200&order=desc&order_by=created_at", sep="")))#
	calCoast[[i]] <- obs$results#
	if(i %% 2 == 0) print(i)#
}#
save(calCoast, file="data/calCoastObs.RData")
i
obs <- fromJSON(URLencode(paste("http://api.inaturalist.org/v1/observations?project_id=",projId,"&rank=tribe,subtribe,genus,genushybrid,species,hybrid,subspecies,variety,form&page=",i,"&per_page=200&order=desc&order_by=created_at", sep="")))
obs <- fromJSON(URLencode(paste("http://api.inaturalist.org/v1/observations?project_id=",projId,"&rank=tribe,subtribe,genus,genushybrid,species,hybrid,subspecies,variety,form&page=",60,"&per_page=200&order=desc&order_by=created_at", sep="")))
obs <- fromJSON(URLencode(paste("http://api.inaturalist.org/v1/observations?project_id=",projId,"&rank=tribe,subtribe,genus,genushybrid,species,hybrid,subspecies,variety,form&page=",49,"&per_page=200&order=desc&order_by=created_at", sep="")))
print(paste("There are ",nObs," observations on ",nPages," pages.", sep=""))
244/8
200*50
q()
